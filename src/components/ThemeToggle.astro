---
import Icon from "@components/Icons.astro";
---

<button
  id="theme-toggle"
  class="theme-toggle text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100 transition-colors"
  aria-label="Toggle theme"
  data-theme-toggle
>
  <span class="theme-icon-wrapper" style="padding-top: 4px;">
    <!-- Icon will be dynamically inserted via JavaScript -->
  </span>
</button>

<script>
  function setupThemeToggle() {
    const toggle = document.getElementById("theme-toggle");
    if (!toggle) return;

    const iconWrapper = toggle.querySelector(".theme-icon-wrapper");
    if (!iconWrapper) return;

    // SVG templates for icons
    const sunSVG = `<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
      <circle cx="12" cy="12" r="4" />
      <path d="M12 2v2" />
      <path d="M12 20v2" />
      <path d="m4.93 4.93 1.41 1.41" />
      <path d="m17.66 17.66 1.41 1.41" />
      <path d="M2 12h2" />
      <path d="M20 12h2" />
      <path d="m6.34 17.66-1.41 1.41" />
      <path d="m19.07 4.93-1.41 1.41" />
    </svg>`;

    const moonSVG = `<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
      <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" />
    </svg>`;

    function updateIcon() {
      if (!toggle || !iconWrapper) return;
      const isDark = document.documentElement.classList.contains("dark");
      iconWrapper.innerHTML = isDark ? moonSVG : sunSVG;
      toggle.setAttribute(
        "aria-label",
        isDark ? "Switch to light theme" : "Switch to dark theme"
      );
    }

    // Set initial icon
    updateIcon();

    // Handle click
    toggle.addEventListener("click", () => {
      const isDark = document.documentElement.classList.contains("dark");
      const newTheme = isDark ? "light" : "dark";

      document.documentElement.classList.toggle("dark");
      localStorage.setItem("theme", newTheme);
      updateIcon();

      window.dispatchEvent(
        new CustomEvent("theme-change", {
          detail: { theme: newTheme },
        })
      );
    });

    // Listen for theme changes from other sources
    window.addEventListener("theme-change", updateIcon);
  }

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", setupThemeToggle);
  } else {
    setupThemeToggle();
  }
</script>

<style>
  .theme-toggle {
    -webkit-tap-highlight-color: transparent;
  }

  .theme-icon-wrapper {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
</style>
